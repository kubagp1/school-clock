// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Configuration {
  id          String     @id @default(cuid())
  name        String
  baseTheme   Theme      @relation(fields: [baseThemeId], references: [id])
  baseThemeId String
  createdById String
  instances   Instance[]
  rules       Rule[]

  @@index([createdById])
  @@index([baseThemeId])
}

model Theme {
  id             String          @id @default(cuid())
  name           String
  createdById    String
  fields         ThemeField[]
  configurations Configuration[]
  rules          Rule[]

  @@index([createdById])
}

enum ThemeFieldName {
  hideClock
  clockColor
  clockSize
}

model ThemeField {
  theme   Theme          @relation(fields: [themeId], references: [id], onDelete: Cascade)
  themeId String
  name    ThemeFieldName
  value   Json
  enabled Boolean

  @@id([themeId, name])
  @@index([themeId])
}

model Instance {
  id              String        @id @default(cuid())
  name            String
  tags            String        @default("")
  configuration   Configuration @relation(fields: [configurationId], references: [id])
  configurationId String
  secret          String        @unique @default(uuid())
  lastSeen        DateTime?

  @@index([configurationId])
}

model InstanceSecretRequest {
  requestCode    String   @id @unique
  claimToken     String   @default(uuid())
  instanceSecret String?
  createdAt      DateTime @default(now())
}

model Rule {
  id              String        @id @default(cuid())
  name            String
  condition       Json          @default("[]")
  enabled         Boolean       @default(true)
  index           Int
  theme           Theme         @relation(fields: [themeId], references: [id])
  themeId         String
  configuration   Configuration @relation(fields: [configurationId], references: [id])
  configurationId String

  @@unique([index, configurationId])
  @@index([configurationId])
  @@index([themeId])
}
